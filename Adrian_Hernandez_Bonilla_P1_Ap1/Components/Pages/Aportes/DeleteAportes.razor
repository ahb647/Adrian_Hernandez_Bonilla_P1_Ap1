@page "/Aportes/DeleteAportes"
@page "/DeleteAportes/{AporteId:int}"
@using Adrian_Hernandez_Bonilla_P1_Ap1.Models
@using Adrian_Hernandez_Bonilla_P1_Ap1.Services
@inject AportesService aportesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar Aportes</PageTitle>

<EditForm Model="@aportes" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h3 class="card-title">Eliminar Sistema</h3>
            </div>

            <div class="card-body text-center">
                <h4 class="text-danger"><strong>¿Estás seguro de que quieres eliminar este contribuyente?</strong></h4>

                @if (aportes != null)
                {
                    <div class="mt-3">
                        <h5><strong>ID:</strong> @aportes.AporteId</h5>
                        <h5><strong>Nombre del contribuyente:</strong> @aportes.Persona</h5>
                        <h5><strong>Observacion:</strong> @aportes.Observacion</h5>
                        <h5><strong>Monto:</strong> @aportes.Monto</h5>
                        <h5><strong>Fecha:</strong> @aportes.DateTime.ToShortDateString()</h5>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        <strong>El registro no existe o ya fue eliminado.</strong>
                    </div>
                }
            </div>

            @* Footer con botones *@
            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group">
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                    <a href="/Aportes/IndexAportes" class="btn btn-outline-primary"><i class="bi bi-arrow-left"></i> Volver</a>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {



    [Parameter] public int AporteId { get; set; }
    public Aportes aportes { get; set; } = new Aportes();

    protected override async Task OnInitializedAsync()
    {
        if (AporteId != 0)
        {
            aportes = await aportesService.Buscar(AporteId);
        }
    }

    private async Task OnValidSubmit()
    {
        if (AporteId != 0)
        {
            await aportesService.Eliminar(AporteId);
        }

        navigationManager.NavigateTo("/Aportes/IndexAportes");
    }

}
